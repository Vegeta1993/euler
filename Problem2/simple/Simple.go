/*

TITLE: Even Fibonacci numbers

DESCRIPTION: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/
package main

import (
	"fmt"
)

/*

Returns next number in Fib series

*/
func Fib(a, b int) (int, int) {
	return b, a + b
}

/*

Get Fib numbers and check whether second number is even. Loop till second number reaches end

*/

func EvenSum(end int) int {

	a := 1
	b := 1

	var sum int

	for b < end {
		if b%2 == 0 {
			sum += b
		}
		a, b = Fib(a, b)
	}
	return sum
}

func main() {
	fmt.Println(EvenSum(4000000))
}
