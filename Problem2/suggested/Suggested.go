/*

TITLE: Even Fibonacci numbers

DESCRIPTION: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/
package main

import (
	"fmt"
)

/*

Returns only sequence of even numbers based on E(n) = 4*E(n-1)+E(n-2)

*/

func Fib(a, b int) (int, int) {
	return b, (4*b + a)
}

/*

Start sequence from first two even number and calculate the sequence, add all the values to sum

*/

func EvenSum(end int) int {

	a := 2
	b := 8

	var sum int = a

	for b < end {
		sum += b
		a, b = Fib(a, b)
	}
	return sum
}

func main() {
	fmt.Println(EvenSum(4000000))
}
